{#
 # dunstrc as jinja2 template
 # Author: Alejandro Ricoveri <@axl_txl>
 # -------------------------------------
 # vim: ft=jinja
 #}
[global]
    font = {{ font }} {{ font_size }}

    {#
    # Allow a small subset of html markup:
    #   <b>bold</b>
    #   <i>italic</i>
    #   <s>strikethrough</s>
    #   <u>underline</u>
    #
    # For a complete reference see
    # <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
    # If markup is not allowed, those tags will be stripped out of the
    # message.
    #}
    allow_markup = yes

    {#
    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed

        # https://developer.gnome.org/pango/stable/PangoMarkupFormat.html
        def set_fmt(icon: '',
                    icon_color: $dunst_color00,
                    separator: ''
                   )
            "<span font='#{$font_icon} 14' color='##{icon_color.upcase}'>#{icon}</span>"\
            "  <b>%s</b>  <span font='#{$font_icon} 14'>#{separator}</span>"\
            "<span font_weight='light'>    %b</span>"
        end
    %>
    #}
    format = "{{ set_fmt() }}"

    {# Sort messages by urgency.#}
    sort = {{ dunst_sort }}

    {# Show how many messages are currently hidden (because of geometry).#}
    indicate_hidden = {{ dunst_indicate_hidden }}

    {#
     # Alignment of message text.
     # Possible values are "left", "center" and "right".
     #}
    alignment = {{ dunst_alignment }}

    {#
     # The frequency with wich text that is longer than the notification
     # window allows bounces back and forth.
     # This option conflicts with "word_wrap".
     # Set to 0 to disable.
     #}
     bounce_freq = {{ dunst_bounce_freq }}

    {#
     # Show age of message if message is older than show_age_threshold
     # seconds.
     # Set to -1 to disable.
     #}
     show_age_threshold = {{ dunst_show_age_threshold }}

    {#
     # Split notifications into multiple lines if they don't fit into
     # geometry.
     #}
    word_wrap = {{ dunst_word_wrap }}

    {#
     # Ignore newlines '\n' in notifications.
     #}
    ignore_newline = {{ dunst_ignore_newline }}

    {#
     # The geometry of the window:
     # [{width}]x{height}[+/-{x}+/-{y}]
     # The geometry of the message window.
     # The height is measured in number of notifications everything else
     # in pixels.  If the width is omitted but the height is given
     # ("-geometry x2"), the message window expands over the whole screen
     # (dmenu-like).  If width is 0, the window expands to the longest
     # message displayed.  A positive x is measured from the left, a
     # negative from the right side of the screen.  Y is measured from
     # the top and down respectevly.
     # The width can be negative.  In this case the actual width is the
     # screen width minus the width defined in within the geometry option.
     #}
    geometry = "" # width = whole screen, height = auto, x = y = 0

    {#
     # Shrink window if it's smaller than the width.  Will be ignored if
     # width is 0.
     #}
    shrink = {{ dunst_shrink }}

    {#
     # The transparency of the window.  Range: [0; 100].
     # This option will only work if a compositing windowmanager is
     # present (e.g. xcompmgr, compiz, etc.).
     #}
    transparency = {{ dunst_transparency }}

    {#
     # Don't remove messages, if the user is idle (no mouse or keyboard input)
     # for longer than idle_threshold seconds.
     # Set to 0 to disable.
     #}
    idle_threshold = {{ dunst_idle_treshold }}

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a windowmanager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern windowmanagers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = {{ dunst_follow }}

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = {{ dunst_sticky_history }}

    # Maximum amount of notifications kept in history
    history_length = {{ dunst_history_lenght }}

    # Display indicators for URLs (U) and actions (A).
    show_indicators = {{ dunst_show_indicators }}

    # The height of a single line.  If the height is smaller than the
    # font height, it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = {{ dunst_line_height }}

    # Draw a line of "separatpr_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = {{ dunst_separator_height }}

    # Padding between text and separator.
    padding = {{ dunst_padding }}

    # Horizontal padding.
    horizontal_padding = {{ dunst_horizontal_padding }}

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = {{ dunst_separator_color }}

    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = {{ dunst_startup_notification }}

    # dmenu path.
    dmenu = {{ dunst_dmenu }}

    # Browser for opening urls in context menu.
    browser = {{ dunst_browser }}
    browser = /usr/bin/chromium

    # Align icons left/right/off
    icon_position = {{ dunst_icon_position }}

    # Paths to default icons.
    icon_folders = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

[frame]
    width = {{ dunst_frame_width }}

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = ctrl+space

    # Close all notifications.
    close_all = ctrl+shift+space

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1".
    history = ctrl+grave

    # Context menu.
    context = ctrl+shift+period

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "{{ dunst_color00 }}"
    foreground = "{{ dunst_color07 }}"
    timeout = 2

[urgency_normal]
    background = "{{ dunst_color0F }}"
    foreground = "{{ dunst_color00 }}"
    timeout = 5

[urgency_critical]
    background = "{{ dunst_color08 }}"
    foreground = "{{ dunst_color00 }}"
    timeout = 0

{#
 # Every section that isn't one of the above is interpreted as a rules to
 # override settings for certain messages.
 # Messages can be matched by "appname", "summary", "body", "icon", "category",
 # "msg_urgency" and you can override the "timeout", "urgency", "foreground",
 # "background", "new_icon" and "format".
 # Shell-like globbing will get expanded.
 #
 # SCRIPTING
 # You can specify a script that gets run when the rule matches by
 # setting the "script" option.
 # The script will be called as follows:
 #   script appname summary body icon urgency
 # where urgency can be "LOW", "NORMAL" or "CRITICAL".
 #
 # NOTE: if you don't want a notification to be displayed, set the format
 # to "".
 # NOTE: It might be helpful to run dunst -print in a terminal in order
 # to find fitting options for rules.
 #}

{#
# Play a sound on notifications
[notisound]
    msg_urgency = normal
    summary = "*"
    script = dunst-play

[fmt-low]
    msg_urgency = low
    format = "<%= set_fmt(icon_color: $dunst_color0B) %>"

[fmt-normal]
    msg_urgency = normal
    format = "<%= set_fmt(icon: '') %>"

[fmt-critical]
    msg_urgency = critical
    format = "<%= set_fmt(icon: '') %>"

####################################
# Application-specific notifications
####################################

# Spotify
[fmt-spotify]
    appname = "Spotify"
    format = "<%= set_fmt(icon: '', separator: '') %>"
    background = "#<%= $dunst_color0B %>"
    foreground = "#<%= $dunst_color00 %>"

# wicd
[fmt-wicd]
    appname = "Wicd"
    format = "<%= set_fmt(icon: '') %>"

# dot-stow-watch sets icon to sync
# since dunst is buggy when it comes
# to do matching by category
# still, this is weak
[fmt-dot-stow-watch]
    appname = notify-send
    icon = sync
    msg_urgency = low
    format = "<%= set_fmt(icon: '', icon_color: $dunst_color0C) %>"
    background = "#<%= $dunst_color01 %>"
    foreground = "#<%= $dunst_color07 %>"
#}
